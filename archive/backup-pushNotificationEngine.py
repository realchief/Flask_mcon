#!/usr/bin/env python
# -*- coding: utf-8 -*-
# coding: utf8

"""
Push Notification Engine
Schedule a cron job to run me at 8,9,10pm, 1,2,3pm and 6,7,8pm
"""

__author__ = 'McHale Consulting (dmchale@mchaleconsulting.net)'
__copyright__ = 'Copyright (c) 2018 McHale Consulting'
__license__ = 'New-style BSD'
__vcs_id__ = '$Id$'
__version__ = '1.0.0' #Versioning: http://www.python.org/dev/peps/pep-0386/

import logging
import smtplib
from email.MIMEMultipart import MIMEMultipart
from email.MIMEText import MIMEText
import requests
import emoji as emojiRender
import json
import time
import psycopg2
import sys
import datetime
import random
from faker import Faker
from googletrans import Translator
import urllib2
from bs4 import BeautifulSoup

logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)
# create a file handler
handler = logging.FileHandler('/home/ubuntu/pushEngine.log')
handler.setLevel(logging.INFO)
# create a logging format
formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
handler.setFormatter(formatter)
# add the handlers to the logger
logger.addHandler(handler)

logger.info('Establishing database connection...')
conn = psycopg2.connect(
    database="pushengine",
    user="root",
    password="agdevil1",
    host="blackbox.c5oicakkxsxn.us-west-2.rds.amazonaws.com",
    port="5432")
cur = conn.cursor()

logger.info("Database connection established.")


onesignal_app_id = "650bceb6-cb6d-4b92-8a03-25d6c224efb1"
onesignal_rest_api_key = "MDZiMWVkNWItNzNkZC00ODY4LWJkZTMtNWViYTk0ZWE1NTA0"
ttl=2419200
priority=5
fake = Faker('en_US')
# Functionality for retrieving top rated thumbnails for message actors
#url = "https://www.reddit.com/r/PrettyGirls/top/?sort=top&t=day"
#url = "https://www.reddit.com/r/happygirls/top/.json?sort=top&t=all"
#url = "https://www.reddit.com/r/cleavage/top/.json?sort=top&t=week"
#headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}
#response = requests.get(url, headers=headers)
#html = response.content
#thumbnail_list = []
#json_thumb = json.loads(html)
#for record in json_thumb['data']['children']:
#    thumbnail_list.append(str(record['data']['thumbnail']))
#    thumbnail_list.append(str(record['data']['url']))
#
#while 'nsfw' in thumbnail_list:
#    thumbnail_list.remove('nsfw')

# Selection of thumbnail to display next to message
thumbnail_list = [
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-1.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-2.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-3.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-4.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-5.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-6.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-7.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-8.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-9.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-10.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-11.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-12.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-13.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-14.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-15.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-16.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-17.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-18.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-19.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-20.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-21.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-22.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-23.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-24.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-25.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-26.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-27.jpg",
"https://d3e0hlhsoiviv3.cloudfront.net/thumbnails/thumbnail-28.jpg"
]
thumbnail = random.choice(thumbnail_list)

# Selection of badge to display under message and in action bar
badge_list = [
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-1.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-2.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-3.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-4.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-5.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-6.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-7.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-8.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-9.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-10.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-11.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-12.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-13.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-14.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-15.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-16.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-17.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-18.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-19.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-20.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-21.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-22.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-23.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-24.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-25.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-26.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-27.png",
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-28.png"
"https://d3e0hlhsoiviv3.cloudfront.net/badges/badge-29.png"
]
badge = random.choice(badge_list) 
name = fake.first_name_female()
number_messages = random.randint(2,7)
headline_types = [
"recent",
"latest",
"strange",
"unique",
"unread",
"unopened",
"unseen",
"missed",
"urgent",
"new",
"secure",
"special",
"latest",
"important",
"sexy",
"lusty",
"quick",
"sincere"
]
headline_type = random.choice(headline_types)
#headline = "({}) Unread messages from {}".format(number_messages, name)

# campaigns = ['utility', 'casino', 'general', 'sweepstakes']
campaigns = ['casino', 'general', 'casino', 'sweepstakes']
num_campaigns = len(campaigns)
campaign_num = random.randint(0,(num_campaigns - 1))
campaign = campaigns[campaign_num]

message_list = [
"Can I tell you a secret? 👀",
"What's your dream car? 🏎️",
"Lmaooo, have you seen r/tifu today? 😂",
"You have a wonderful name. 😜",
"I found you through Michael 👨",
"Tutor me pls 🙏🏻",
"Craziest thing? Made out with my grandpa, wbu?",
"didnt you fuck my sister? 🤔",
"Quick favor? 😇",
"Help me pls? 🤗",
"I'm outside, are you still home? 💋",
"You know what I like? 🍆",
"No fucking way, did you really? 😰",
"I would have been paralyzed! 😱",
"Please tell me you did NOT! 🤣",
"Are you home yet? 😈",
"Can we go out tonight? 🤠",
"Ugh, when are you off work? 😭",
"Plsss tell, I can keep a secret! 🤐",
"3rd time this wk I got stood up. 😢",
"I really can't stand Trump 🙄",
"I can't handle more Republicans 🙄",
"Where are we going tonite? 💃🏻",
"You thought I was AMY? 🖕🏻",
"Hey sexy, can you come over? 👅",
"My ex-bf just humiliated me. 😥",
"Look, I just want an orgasm. 💦",
"Terrific, free for drinks later? 🍻",
"Think you can dazzle me? 😎",
"I was an erotic dancer, you flirt! 💃🏻",
"I need a sexy valentine. 💞",
"I need to be used... 👄",
"Do you have handcuffs? 👮",
"Are you going to spank me? 👋",
"I just want a fuck buddy 😬",
"wtf are you doing? 😡",
"omg look at this pic 👀",
"don't share this pic with anyone 😈",
"Just bought these panties 👙",
"Kiss, kill, or marry?🤥",
"I'm in agony today...😕",
"Debt-free! Drinks on me.😘 ",
"Did you see the cancer cure?",
"Steal a kiss? Me?😘",
"I'm no criminal, but I'm...",
"Your profile is killer...💀",
"Ya get the tumor results?😬",
"He went to PRISON for it!😵",
"Then that pervert beat me.😢",
"I'm in pain from jealousy.🙃",
"The surgery was a massacre.😰",
"in the pistol, and I panicked!😩",
"I was in hell, bankrupt too.😦 ",
"Jail felt like a coffin.☠️",
"I hate worrying like this.😱 ",
"I'm feeling lots of aggression.",
"Malaria? The test was right?😞",
"Cancer? For real?😞",
"A tumor? The test was right?😞",
"You're gravely mistaken.",
"Look, this is a CRISIS.😡",
"I do, I blame you.😆",
"It was an accident, you liar.😭",
"You filthy bastard!😑",
"You want me to cheat? 😈",
"Jim? He's an insane nazi.💩",
"You're too hot-tempered for me.👎",
"Why are you acting resentful?😫",
"God, why are you so messy?😫",
"I'm sorry, I didn't mean it.",
"Why are you so intolerant?😆",
"Fuckkk, that IS disturbing.😱",
"That's lethal? I had no idea.🤒 ",
"You're being ultra-critical.😭",
"You disloyal, sick, PHONY!😭",
"Get nasty for me.👿"

]

"""
if 'sweepstakes' in campaign:
    message_list = [
    "This free {} gift card will make you cry with joy",
    "This {} gift card is why you got up today",
    "Can we guess? You love {}, right?",
    "Only 7 {} gift cards remaining!",
    "Only 10 {} gift cards remaining!",
    "Only 5 {} gift cards remaining!",
    "Only 15 {} gift cards remaining!",
    "Check out this {} deal!",
    "You could win a Free {}!",
    "YAY! Congrats on the Free {}!",
    "[Last Chance] Claim Your Free {} ",
    "Free $100 {} Gift Card",
    "Hey! Grab Your $100 {} Gift Card",
    "WAIT - Get Your $100 {} Gift Card",
    "Thanks - Here's Your Free {} Gift Card!",
    "Get a Free $100 {} gift card!",
    "Do you want a free {} gift card?"
    ]

    prize_list = [
    "Adidas",
    "Aeropostale",
    "Airbnb",
    "Aldi",
    "Amazon",
    "American Eagle",
    "Apple"
    "Asus",
    "AT&T",
    "Banana Republic",
    "Barnes & Noble",
    "Best Buy",
    "Burger King",
    "Chick-fil-A",
    "Chipotle",
    "Converse",
    "Costco",
    "Dell",
    "Disney",
    "Dollar Tree",
    "Forever 21",
    "Gamestop",
    "Gap",
    "Home Depot",
    "Hot Topic",
    "iPhone",
    "J. Crew",
    "JCPenney",
    "Kohl's",
    "Kroger",
    "Levi's",
    "Macy's",
    "Marriott",
    "Marshalls",
    "Marvel",
    "McDonald's",
    "Michael Kors",
    "Nordstrom",
    "North Face",
    "Old Navy",
    "Panera",
    "Pizza Hut",
    "Polo",
    "Popeyes",
    "Ralph Lauren",
    "Safeway",
    "Samsung",
    "Sephora",
    "Sony",
    "Starbucks",
    "Taco Bell",
    "Target",
    "Trader Joe's",
    "Uber",
    "Under Armour",
    "Victoria Secret",
    "Visa",
    "Walmart",
    "Wendy's",
    "Whole Foods",
    ]
    
    num_prizes = len(prize_list)
    prize_num = random.randint(0,(num_prizes - 1))
    prize = prize_list[prize_num]
"""

num_messages = len(message_list)
message_num = random.randint(0,(num_messages - 1))
message = message_list[message_num]
"""
if 'sweepstakes' in campaign:
    message = message.format(prize)
    print(message)
    headline = "Exclusive Free Giveaway"
    thumbnail_list = [
    "https://www.shareicon.net/download/2015/10/07/113654_award_512x512.png",
    "http://couragecrusade.com/wp-content/uploads/2013/12/winner.png",
    "http://www.theneighborhoodmoms.com/wp-content/uploads/2014/09/GiveawayWinner.png",
    "http://health.mo.gov/living/families/ruralhealth/img/trophey.png",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTM8Zri8_aFWTGfr2rU4ZB0RtL73KqxA__xNhLz9CnuOFBXW07i"
    ]
    num_thumbnails = len(thumbnail_list)
    thumbnail_num = random.randint(0,(num_thumbnails - 1))
    thumbnail = thumbnail_list[thumbnail_num]
    name = "blank"
    number_messages = "blank"
"""



"""
Languages Supported:
Arabic
Bulgarian
Catalan
Chinese (Simplified)
Chinese (Traditional)
Croatian
Czech
Danish
Dutch
English
Estonian
Finnish
French
Georgian
German
Greek
Hebrew
Hindi
Hungarian
Indonesian
Italian
Japanese
Korean
Latvian
Lithuanian
Malay
Norwegian
Persian
Polish
Portuguese
Romanian
Russian
Serbian
Slovak
Spanish
Swedish
Thai
Turkish
Ukrainian
Vietnamese
"""

translations = [
#"ar",
#"bg",
"ca",
"cs",
"da",
"de",
"el",
"en",
"es",
"et",
"fa",
"fi",
"fr",
"he",
"hi",
"hr",
"hu",
"id",
"it",
"ja",
"ka",
"ko",
"lt",
"lv",
"ms",
"nb",
"nl",
"pl",
"pt",
"ro",
"ru",
"sk",
"sr",
"sv",
"th",
"tr",
"uk",
"vi",
"zh-Hans",
"zh-Hant"]

localized_name_codes = {"ar" : "ar_SA",
"bg": "bg_BG",
"ca": "es_ES",
"cs": "cs_CZ",
"da": "nl_NL",
"de": "de_DE",
"el": "el_GR",
"en": "en_US",
"es": "es_ES",
"et": "et_EE",
"fa": "fa_IR",
"fi": "fi_FI",
"fr": "fr_FR",
"he": "en_US",
"hi": "hi_IN",
"hr": "hr_HR",
"hu": "hu_HU",
"id":"hi_IN",
"it":"it_IT",
"ja":"ja_JP",
"ka":"en_US",
"ko":"ko_KR",
"lt":"lt_LT",
"lv":"lv_LV",
"ms":"en_US",
"nb":"en_US",
"nl":"nl_NL",
"pl":"pl_PL",
"pt":"pt_PT",
"ro":"ro_RO",
"ru":"ru_RU",
"sk":"sl_SI",
"sr":"sl_SI",
"sv":"sv_SE",
"th":"en_US",
"tr":"tr_TR",
"uk":"uk_UA",
"vi":"en_US",
"zh-Hans": "zh_CN",
"zh-Hant": "zh_CN"}
contents = {}
headings = {}
"""
for translation in translations:
    print(translation)
    translator = Translator()
    fake = Faker(localized_name_codes[translation])
    name = (str(fake.first_name_female())).decode('utf8')
    print(name)
    headline = "({}) {} messages from {}".format(number_messages, headline_types[headline_type], name)
    translated_headline = str(translator.translate('{}'.format(headline), src='en', dest='{}'.format(translation))).decode('utf8')
    contents[translation] = translated_headline
    translated_message = str(translator.translate('{}'.format(message), src='en', dest='{}'.format(translation))).decode('utf8')
    headings[translation] = translated_message
"""
print(contents)
print(headings)

import random

ext_word_list = ["absent-minded",
"abusing",
"accomodating",
"acorn",
"apricots",
"aquarium",
"argumentative",
"baronet",
"blase",
"blitzkrieg",
"boastful",
"bossy",
"boyfriend",
"broad-minded",
"bullheaded",
"busybody",
"castration",
"caustic",
"chime",
"cinnamon",
"clean-cut",
"clear-headed",
"clownish",
"cockroach",
"coma",
"combative",
"comical",
"compliant",
"conforming",
"cool-headed",
"crabby",
"criticised",
"cucumber",
"cyclone",
"dagger",
"daredevil",
"daydreamer",
"decomposed",
"deformed",
"demonstrative",
"deserter",
"devil",
"diploma",
"dishonorable",
"dislikable",
"disrespectful",
"distrustful",
"down-hearted",
"down-to-earth",
"dustpan",
"Easter",
"egotistical",
"ennui",
"exactness",
"excitable",
"exhibitionistic",
"extraverted",
"faithless",
"false",
"fault-finding",
"flabby",
"flawed",
"foresighted",
"fretful",
"gangrene",
"giraffe",
"girlfriend",
"good-humored",
"good-natured",
"good-tempered",
"gossipy",
"grime",
"gripe",
"grouchy",
"grumpy",
"guillotine",
"hairdryer",
"halibut",
"happy-go-lucky",
"hard-hearted",
"headlight",
"headstrong",
"high-spirited",
"high-strung",
"hinder",
"homespun",
"hooker",
"hot-headed",
"hot-tempered",
"humorless",
"hydrant",
"hypochondriac",
"ill-mannered",
"ill-tempered",
"impolite",
"impressionable",
"India",
"inhabitant",
"innovative",
"inoffensive",
"insightful",
"instep",
"irreligious",
"Italian",
"joyless",
"kind-hearted",
"law-breaker",
"lethargic",
"lettuce",
"level-headed",
"light-hearted",
"lightbulb",
"lighthouse",
"likable",
"loud-mouthed",
"maggot",
"mallet",
"mane",
"manipulative",
"mannerly",
"meddlesome",
"medleu",
"melancholic",
"middleclass",
"miserly",
"misfit",
"mitten",
"motorcycle",
"mucous",
"muffin",
"mutation",
"narrow-minded",
"negativistic",
"neglectful",
"nipple",
"nonconfident",
"nonconforming",
"nosey",
"obliging",
"old-fashioned",
"open-minded",
"opportunist",
"oregano",
"organisation",
"overcautious",
"overcritical",
"oversensitive",
"pancakes",
"passionless",
"pasta",
"penis",
"perfectionistic",
"pervert",
"phlegm",
"pimple",
"plums",
"prideful",
"principled",
"punctual",
"pus",
"putrid",
"qualm",
"quick-witted",
"radishes",
"rambunctious",
"rancid",
"regretful",
"reptile",
"sapphire",
"scab",
"scorching",
"scorpion",
"scum",
"seashell",
"seasick",
"seclusive",
"secretive",
"self-assured",
"self-centered",
"self-conceited",
"self-concerned",
"self-confident",
"self-conscious",
"self-contented",
"self-controlled",
"self-critical",
"self-discipline",
"self-indulgent",
"self-pitying",
"self-possesssed",
"self-reliant",
"self-righteous",
"self-satisfied",
"self-sufficient",
"sharp-witted",
"short-tempered",
"sissy",
"skijump",
"slime",
"slush",
"soft-hearted",
"soft-spoken",
"spanking",
"spatula",
"spendthrift",
"spiteful",
"sportsmanlike",
"stalk",
"stork",
"strong-minded",
"stupide",
"suggestible",
"swimmer",
"syphilis",
"tactless",
"tangerines",
"tattoo",
"temperamental",
"tempestuous",
"termite",
"terrorist",
"thruthful",
"tickle",
"toaster",
"toothache",
"tumour",
"turnip",
"ultra-critical",
"unaccomodating",
"unadventurous",
"unagreeable",
"unagressive",
"unappealing",
"unappreciative",
"unassuming",
"unattentive",
"uncompetitive",
"uncongenial",
"uncultured",
"undecided",
"unenterprising",
"unentertaining",
"unethical",
"unforgiving",
"ungraceful",
"unhibited",
"unindustrious",
"uninquisitive",
"uninspiring",
"unintellectual",
"unintelligent",
"unkindly",
"unobliging",
"unobservant",
"unoriginal",
"unpleasing",
"unpoised",
"unpunctual",
"unrestrained",
"unsociable",
"unsocial",
"unsporting",
"unsportsmanlike",
"unstudious",
"unsystematic",
"untiring",
"untrustworthy",
"untruthful",
"utensil",
"valour",
"vampire",
"vandal",
"verbose",
"vomit",
"warm-hearted",
"well-bred",
"well-mannered",
"well-read",
"well-spoken",
"wishy-washy",
"worrier",
"wrench",
"zestful",
"abduction",
"abusive",
"addict",
"allergy",
"apathetic",
"ascent",
"autonomous",
"avalanche",
"baffle",
"bigoted",
"blubber",
"boisterous",
"boxer",
"bracelet",
"bragging",
"briefcase",
"bunny",
"caress",
"carrot",
"champ",
"chives",
"choosy",
"clarinet",
"colour",
"companionable",
"conceited",
"concise",
"contemplative",
"cozy",
"crafty",
"cranky",
"cripple",
"crutch",
"cuisine",
"deceitful",
"derelict",
"devious",
"disagreeable",
"discontented",
"disgust",
"diver",
"easygoing",
"egocentric",
"embattled",
"enraged",
"envious",
"felony",
"fickle",
"finicky",
"flippant",
"flirt",
"flounder",
"froth",
"germs",
"gymnast",
"hairpin",
"heartless",
"humour",
"illogical",
"imitative",
"immodest",
"imperturbable",
"impulsive",
"inattentive",
"inquisitive",
"insincere",
"intolerant",
"introverted",
"intruder",
"invader",
"jovial",
"joyful",
"kerchief",
"ketchup",
"kite",
"lawsuit",
"lemons",
"leprosy",
"lesbian",
"levity",
"listless",
"loser",
"lottery",
"massacre",
"meticulous",
"mildew",
"moralistic",
"morgue",
"nonchalant",
"obstinate",
"opportunistic",
"overconfident",
"paddock",
"painstaking",
"parsley",
"penthouse",
"perch",
"pliers",
"plum",
"profane",
"punishable",
"purposeless",
"rabies",
"rash",
"repentant",
"riddle",
"sailboat",
"sap",
"sarcastic",
"scalding",
"scapegoat",
"scissors",
"scurvy",
"sequel",
"shamed",
"shark",
"showy",
"slothful",
"sneer",
"snob",
"sociable",
"spill",
"squeak",
"squeamish",
"squirrel",
"stench",
"stingy",
"studious",
"superstitious",
"tenacious",
"tidy",
"tornado",
"touchy",
"trauma",
"trustful",
"truthful",
"uncivil",
"underhanded",
"unfaithful",
"ungracious",
"unimaginative",
"uninteresting",
"unlawful",
"unmethodical",
"unproductive",
"unromantic",
"unselfish",
"unsophisticated",
"untidy",
"urine",
"veneer",
"venturesome",
"windmill",
"wordy",
"wretch",
"zebra",
"adaptable",
"alimony",
"amiable",
"anguished",
"antisocial",
"appreciative",
"arrogant",
"astronaut",
"bashful",
"beggar",
"benevolent",
"blackmail",
"blob",
"bodice",
"bookcase",
"butterfly",
"casino",
"centre",
"cherries",
"compassionate",
"condescending",
"cosmopolitan",
"deceit",
"diligent",
"discourteous",
"disdainful",
"dishonest",
"disloyal",
"disobedient",
"dominating",
"domineering",
"exacting",
"favour",
"festive",
"filth",
"foolhardy",
"forgetful",
"forgiving",
"fright",
"fungus",
"garter",
"gender",
"ginger",
"glacier",
"gullible",
"haphazard",
"heroin",
"homosexual",
"honour",
"hostage",
"idealistic",
"impotent",
"incompetent",
"indecisive",
"insolent",
"introspective",
"intrusive",
"jerk",
"jewel",
"jumpy",
"kidnapper",
"knowledgeable",
"lice",
"lifeless",
"limber",
"lonesome",
"luscious",
"madman",
"malice",
"malicious",
"masterful",
"materialistic",
"measles",
"meditative",
"morbid",
"morose",
"mosquito",
"mucus",
"mural",
"mushroom",
"narcotic",
"negligent",
"nun",
"obedient",
"obscene",
"ooze",
"opinionated",
"owl",
"paprika",
"patio",
"prick",
"prudent",
"puppy",
"quarrelsome",
"ram",
"realist",
"rebellious",
"refreshment",
"riches",
"roach",
"robber",
"rotten",
"sage",
"scatterbrained",
"scolding",
"selfless",
"sexy",
"shove",
"sip",
"skillet",
"skyscraper",
"slap",
"sluggish",
"smallpox",
"sneak",
"sniff",
"snobbish",
"spinach",
"stinking",
"suave",
"surly",
"tactful",
"traitor",
"unemotional",
"unenthusiastic",
"ungrateful",
"unlucky",
"unpredictable",
"unruly",
"valentine",
"venom",
"vindictive",
"volcano",
"wasp",
"waterfall",
"whore",
"wrinkle",
"addicted",
"adorable",
"agility",
"alcoholic",
"aspirin",
"barracks",
"bland",
"blister",
"candid",
"cheat",
"conformist",
"cowardly",
"darn",
"defect",
"defiant",
"diarrhoea",
"discreet",
"doom",
"dummy",
"elated",
"enchantment",
"erratic",
"fastidious",
"fatigued",
"flamboyant",
"folksy",
"gamble",
"gloomy",
"golfer",
"greed",
"grenade",
"hesitant",
"hug",
"icebox",
"idiot",
"impetuous",
"impudent",
"industrious",
"insecure",
"insensitive",
"insomnia",
"inventive",
"jelly",
"kettle",
"lavish",
"lenient",
"liar",
"lick",
"louse",
"maladjusted",
"malaria",
"mantel",
"messy",
"millionaire",
"mischievous",
"mystic",
"noose",
"observant",
"pamphlet",
"peach",
"peel",
"perceptive",
"pizza",
"playful",
"pompous",
"purposeful",
"quart",
"rattlesnake",
"resentful",
"resourceful",
"reverent",
"salmon",
"salute",
"satirical",
"scheming",
"sinful",
"sloppy",
"somber",
"spider",
"splash",
"spouse",
"stink",
"thorn",
"thoughtless",
"thrifty",
"tiresome",
"torture",
"toxic",
"trash",
"trustworthy",
"unconventional",
"uncritical",
"unjust",
"unkind",
"unreasonable",
"unskilled",
"unsympathetic",
"unwise",
"versatile",
"villain",
"vivacious",
"ache",
"antagonistic",
"assaults",
"assertive",
"bandage",
"bathtub",
"bereavement",
"blasphemy",
"bliss",
"bouquet",
"bully",
"cabbage",
"celery",
"chisel",
"considerate",
"courageous",
"crush",
"cultured",
"deceptive",
"despairing",
"distressed",
"docile",
"dove",
"dump",
"frog",
"fuss",
"glisten",
"gregarious",
"gruff",
"imperfect",
"incline",
"individualistic",
"infatuation",
"insulting",
"irritating",
"jealous",
"jealousy",
"jolly",
"loveliness",
"maniac",
"methodical",
"modification",
"nectar",
"nutmeg",
"outrage",
"persuasive",
"pest",
"pirate",
"possessive",
"poster",
"prejudiced",
"pungent",
"quota",
"radiator",
"respectful",
"saxophone",
"scorn",
"sheltered",
"skull",
"submissive",
"talkative",
"thirst",
"toy",
"treasure",
"trusting",
"twilight",
"unhealthy",
"unreliable",
"vest",
"whistle",
"withdrawing",
"withdrawn",
"yacht",
"adventurous",
"aimless",
"aloof",
"altar",
"appliance",
"attentive",
"awed",
"bankrupt",
"belligerent",
"beverage",
"boring",
"changeable",
"charitable",
"complaining",
"corpses",
"cunning",
"cute",
"daddy",
"eagle",
"eldest",
"enterprising",
"extravagant",
"fearing",
"fireworks",
"frigid",
"genial",
"glamour",
"greedy",
"harmless",
"harmonious",
"headache",
"hearty",
"humane",
"immoral",
"impractical",
"inaccurate",
"inconsistent",
"inhibited",
"intellect",
"irritable",
"kindness",
"kitten",
"kneel",
"leisurely",
"lethal",
"mediocre",
"mischief",
"moody",
"nasty",
"nuisance",
"obesity",
"obnoxious",
"obsession",
"option",
"pastry",
"politeness",
"proficient",
"racket",
"rainbow",
"rape",
"rattle",
"righteous",
"runner",
"scan",
"scornful",
"shriek",
"sly",
"stagnant",
"steal",
"stripes",
"swamp",
"tame",
"terrific",
"thirsty",
"thrill",
"timid",
"triumphant",
"ulcer",
"uncompromising",
"unscrupulous",
"worrying",
"zest",
"abortion",
"affectionate",
"ambulance",
"annoying",
"apples",
"assassin",
"astonished",
"attacker",
"awe",
"clumsy",
"cod",
"comb",
"communicative",
"cord",
"cordial",
"courteous",
"disgusted",
"dissatisfied",
"dreary",
"dwarf",
"ecstasy",
"erosion",
"fairy",
"foul",
"fragment",
"fragrance",
"frivolous",
"garment",
"hamburger",
"handicap",
"jug",
"kerosene",
"lust",
"navigation",
"noisy",
"outdoors",
"outspoken",
"oyster",
"pessimistic",
"placid",
"refined",
"reflective",
"rub",
"rude",
"savior",
"scent",
"sickness",
"sour",
"starving",
"surgery",
"thankful",
"unfriendly",
"unpopular",
"vitamin",
"volatile",
"wallet",
"accomplishment",
"ambush",
"antelope",
"argon",
"beast",
"blossom",
"brutal",
"bust",
"cannon",
"carcass",
"chore",
"circus",
"coffin",
"congenial",
"corpse",
"dignified",
"discomfort",
"discriminating",
"displeased",
"elephant",
"errand",
"expressive",
"exuberant",
"fearless",
"garbage",
"grapes",
"grudge",
"immature",
"inefficient",
"inexperienced",
"inferior",
"insult",
"kitty",
"lamb",
"lump",
"manure",
"maple",
"naive",
"orgasm",
"paralysis",
"patriotism",
"polite",
"punch",
"riot",
"ruthless",
"skeptical",
"slacks",
"smug",
"soak",
"sponge",
"sprinkle",
"subway",
"superficial",
"talented",
"terrified",
"tiger",
"troublesome",
"trumpet",
"vanity",
"vulgar",
"wasteful",
"wink",
"wrinkles",
"alley",
"banner",
"barber",
"bloody",
"careless",
"cheer",
"corrupt",
"coward",
"curtains",
"cushion",
"dependable",
"dismal",
"embarrassed",
"erotic",
"farmhouse",
"feeble",
"forceful",
"fraud",
"hurricane",
"idol",
"infection",
"irrational",
"kindly",
"mobility",
"mutton",
"outgoing",
"pet",
"petty",
"pillow",
"radiant",
"revolt",
"rip",
"rusty",
"scandal",
"selfish",
"shrewd",
"slum",
"stool",
"straightforward",
"subdued",
"tangle",
"thief",
"trophy",
"trunk",
"umbrella",
"wounds",
"accent",
"agony",
"analytical",
"athletics",
"authoritative",
"blunt",
"carefree",
"cheese",
"chocolate",
"cork",
"cynical",
"diamond",
"esteem",
"hardship",
"hint",
"illegal",
"indignation",
"ink",
"intercourse",
"irresponsible",
"lazy",
"loneliness",
"manifest",
"melancholy",
"menace",
"nightmare",
"offensive",
"overcast",
"pinch",
"pineapple",
"predictable",
"provincial",
"rat",
"reckless",
"resigned",
"salad",
"scrub",
"skillful",
"smoking",
"steeple",
"tortured",
"toss",
"wicked",
"worldly",
"admirable",
"aggression",
"ankle",
"bite",
"cautious",
"cheerful",
"coarse",
"coin",
"conscientious",
"crushed",
"demon",
"dig",
"doll",
"dreadful",
"earthy",
"elbow",
"frustrated",
"gigantic",
"gracious",
"grease",
"hammer",
"ingenious",
"knot",
"majestic",
"margin",
"merry",
"misfortune",
"monkey",
"neurotic",
"patriot",
"perfume",
"pious",
"poison",
"rally",
"recruit",
"scar",
"shotgun",
"slate",
"slaughter",
"sunrise",
"swear",
"sweetheart",
"tackle",
"thermometer",
"thigh",
"tolerant",
"vagina",
"vain",
"vitamins",
"willow",
"witty",
"wrist",
"adverse",
"agreeable",
"amazed",
"apprehension",
"awkward",
"blond",
"breast",
"burial",
"childish",
"cliff",
"compulsive",
"concentrate",
"convincing",
"depressed",
"disciplined",
"eccentric",
"energetic",
"expectation",
"flush",
"gene",
"indifferent",
"infant",
"invite",
"keen",
"launch",
"leisure",
"lifetime",
"locker",
"meek",
"muddy",
"passive",
"perfection",
"pig",
"preoccupied",
"prompt",
"rabbit",
"rotation",
"sanction",
"sandwich",
"spit",
"strict",
"swallow",
"tender",
"thoughtful",
"tune",
"violin",
"wholesome",
"zone",
"absorption",
"ardent",
"bastard",
"button",
"cane",
"census",
"climb",
"daring",
"dentist",
"detached",
"elevator",
"entertaining",
"faithful",
"fashionable",
"grief",
"grill",
"harsh",
"honorable",
"hopeful",
"ignorant",
"incentive",
"juice",
"lens",
"magical",
"neglect",
"ominous",
"paradise",
"phony",
"poised",
"privacy",
"reunion",
"silk",
"solemn",
"stubborn",
"temper",
"theatrical",
"tires",
"tomb",
"wealthy",
"youthful",
"abundance",
"barbecue",
"beating",
"cake",
"carpet",
"computer",
"fearful",
"gossip",
"imaginative",
"incomplete",
"insane",
"lantern",
"limp",
"matches",
"mix",
"nitrogen",
"nursery",
"pepper",
"resident",
"restless",
"restrained",
"scream",
"sunny",
"suspicious",
"tank",
"toilet",
"tower",
"unfair",
"youngest",
"adventure",
"amusing",
"bored",
"brooding",
"debt",
"decay",
"egg",
"elegant",
"fur",
"gloom",
"grin",
"hopeless",
"impersonal",
"insect",
"penalty",
"pie",
"python",
"relaxed",
"revolver",
"rug",
"sensible",
"shallow",
"shy",
"spirited",
"sunset",
"sweater",
"upright",
"upset",
"wax",
"applause",
"bees",
"breeze",
"burn",
"cemetery",
"constructive",
"contempt",
"crude",
"cruel",
"daylight",
"defeated",
"deliberate",
"dimension",
"disappointment",
"disapproval",
"discouraged",
"drag",
"drums",
"excellence",
"execution",
"fabric",
"fantasy",
"fork",
"hawk",
"lawn",
"lightning",
"memories",
"misery",
"onion",
"optimism",
"optimistic",
"pianist",
"rescue",
"silly",
"sincere",
"stimulus",
"stove",
"sweep",
"tense",
"unpleasant",
"validity",
"alien",
"ambitious",
"ashamed",
"assault",
"bake",
"candy",
"client",
"closet",
"contents",
"custom",
"dutch",
"foster",
"glorious",
"humorous",
"ignorance",
"muscular",
"nazi",
"needle",
"nonsense",
"persistent",
"pottery",
"priest",
"rage",
"reward",
"saint",
"scholar",
"sentimental",
"tennis",
"absurd",
"ace",
"admired",
"aggressive",
"angel",
"awful",
"basket",
"cabinet",
"chaos",
"clever",
"corridor",
"defensive",
"deputy",
"explosive",
"fold",
"foolish",
"goodness",
"heel",
"horror",
"hunger",
"kiss",
"lion",
"nurse",
"pity",
"progressive",
"quote",
"razor",
"refuse",
"shake",
"sooner",
"spontaneous",
"spray",
"statue",
"suicide",
"sunlight",
"taxi",
"useless",
"vicious",
"violation",
"voyage",
"abuse",
"affection",
"bathroom",
"birthday",
"chase",
"earnest",
"fame",
"fan",
"flag",
"friction",
"fringe",
"holiday",
"humble",
"informal",
"iodine",
"ivory",
"kick",
"lamp",
"loyal",
"miracle",
"rebel",
"stolen",
"subjective",
"tray",
"tumor",
"twist",
"voltage",
"ambition",
"arrest",
"caution",
"confident",
"cottage",
"decisive",
"demanding",
"fever",
"hostile",
"infinite",
"priority",
"shocked",
"systematic",
"whip",
"wildlife",
"accordance",
"aroused",
"clothing",
"cooperative",
"crash",
"crown",
"guitar",
"illness",
"ladder",
"murderer",
"orderly",
"pen",
"quarrel",
"socialism",
"solar",
"tobacco",
"weary",
"bold",
"clock",
"competent",
"decent",
"despair",
"enjoyment",
"flood",
"hatred",
"helpless",
"indirect",
"intimate",
"jail",
"knight",
"loud",
"lucky",
"luxury",
"melody",
"neat",
"nude",
"prairie",
"punishment",
"respectable",
"scared",
"smart",
"thorough",
"ugly",
"urgent",
"casual",
"fault",
"garage",
"glory",
"hay",
"joke",
"laughter",
"package",
"panic",
"poverty",
"refund",
"reliable",
"retained",
"startled",
"stiff",
"tire",
"triumph",
"uneasy",
"wealth",
"wit",
"autumn",
"bowl",
"champion",
"controlling",
"economical",
"excited",
"habit",
"killing",
"moderate",
"sentiment",
"soap",
"verbal",
"academy",
"brave",
"cat",
"charming",
"criminal",
"depression",
"enthusiastic",
"flower",
"hide",
"jump",
"mathematical",
"nervous",
"palm",
"relieved",
"rhythm",
"sheep",
"sphere",
"stupid",
"weekly",
"whisky",
"actor",
"adult",
"delayed",
"flexible",
"generous",
"grateful",
"lock",
"pack",
"rational",
"stern",
"subtle",
"swing",
"cancer",
"cellar",
"charm",
"civilian",
"disaster",
"disturbed",
"hungry",
"intelligent",
"killer",
"legend",
"lively",
"lonely",
"peaceful",
"pond",
"productive",
"promotion",
"rigid",
"sophisticated",
"storm",
"terror",
"treat",
"unhappy",
"bath",
"butter",
"eager",
"excuse",
"gear",
"gentle",
"honey",
"injury",
"inspired",
"philosophical",
"reserved",
"sweat",
"victim",
"zero",
"chin",
"christmas",
"dawn",
"diplomatic",
"dull",
"fist",
"innocence",
"journey",
"laugh",
"passion",
"star",
"warmth",
"witness",
"anxious",
"bullet",
"consistent",
"delight",
"divorce",
"educated",
"eternal",
"ethical",
"guilty",
"helpful",
"merit",
"modest",
"prestige",
"vigorous",
"wound",
"barrel",
"citizen",
"expert",
"impressed",
"mighty",
"pistol",
"secure",
"stem",
"strip",
"virtue",
"basement",
"cow",
"dancer",
"mature",
"movie",
"occurrence",
"precious",
"protected",
"radical",
"stable",
"troubled",
"bird",
"courage",
"curt",
"debate",
"defeat",
"discipline",
"excitement",
"graduate",
"inadequate",
"medicine",
"museum",
"skilled",
"slave",
"theatre",
"weak",
"wedding",
"accident",
"alert",
"artistic",
"blow",
"branch",
"burst",
"damage",
"efficient",
"factory",
"grave",
"healthy",
"mountain",
"precise",
"rejected",
"romantic",
"tragic",
"blame",
"bride",
"bus",
"divine",
"drill",
"funeral",
"gift",
"jacket",
"logical",
"measurement",
"mistake",
"naked",
"realistic",
"smell",
"sugar",
"swift",
"sympathetic",
"accurate",
"affect",
"beef",
"bench",
"calm",
"conservative",
"context",
"corn",
"crime",
"fish",
"fruit",
"ocean",
"row",
"sad",
"tape",
"vehicle",
"virgin",
"waste",
"yield",
"baker",
"camera",
"cash",
"pencil",
"profit",
"ratio",
"satisfied",
"shadow",
"chicken",
"definite",
"dirty",
"hurt",
"innocent",
"outstanding",
"patent",
"bomb",
"foam",
"glad",
"paint",
"pleasant",
"stomach",
"tough",
"assured",
"clouds",
"comedy",
"mad",
"palace",
"transfer",
"wash",
"composed",
"conscience",
"definition",
"goals",
"handsome",
"highway",
"intense",
"joy",
"severe",
"soldier",
"talent",
"bread",
"dependent",
"destruction",
"pleased",
"queen",
"restaurant",
"sister",
"violent",
"bag",
"hate",
"smooth",
"threat",
"weapon",
"wise",
"anxiety",
"comfort",
"lawyer",
"mental",
"porch",
"prison",
"removal",
"seed",
"steady",
"throw",
"tool",
"confused",
"dirt",
"heaven",
"nearby",
"quarter",
"shoes",
"angry",
"expensive",
"finger",
"mold",
"pride",
"promise",
"rapid",
"taxes",
"terrible",
"avenue",
"brush",
"curious",
"decade",
"journal",
"shut",
"snake",
"superior",
"weakness",
"cook",
"engaged",
"fun",
"humor",
"mail",
"rough",
"vacation",
"anger",
"comparison",
"employment",
"liberty",
"luck",
"safety",
"tired",
"creative",
"formal",
"honest",
"milk",
"passage",
"ride",
"salt",
"screen",
"strike",
"tragedy",
"brilliant",
"grant",
"pink",
"proud",
"ring",
"silent",
"welcome",
"worse",
"acceptance",
"blind",
"devoted",
"engine",
"estate",
"female",
"surprise",
"conventional",
"sick",
"bitter",
"experienced",
"iron",
"plain",
"absence",
"risk",
"seat",
"sin",
"worry",
"description",
"phone",
"plenty",
"win",
"agency",
"conduct",
"dear",
"grass",
"identity",
"item",
"lake",
"loved",
"pure",
"spite",
"afraid",
"alive",
"gold",
"hat",
"organized",
"uncle",
"wagon",
"dollar",
"exercise",
"limit",
"lose",
"motor",
"occasion",
"surprised",
"useful",
"vision",
"wild",
"fiction",
"lie",
"notice",
"painting",
"perfect",
"smile",
"taste",
"critical",
"garden",
"orchestra",
"sensitive",
"truck",
"bible",
"circle",
"friendly",
"victory",
"careful",
"fat",
"kid",
"library",
"safe",
"sky",
"snow",
"travel",
"tree",
"benefit",
"coast",
"pleasure",
"beach",
"kill",
"maintenance",
"narrow",
"reasonable",
"rifle",
"desk",
"dominant",
"powerful",
"yellow",
"adequate",
"baby",
"broken",
"capable",
"chair",
"metal",
"moon",
"search",
"signal",
"sleep",
"emotional",
"honor",
"slow",
"career",
"dress",
"frank",
"wonder",
"achievement",
"odd",
"practical",
"soft",
"danger",
"fashion",
"warm",
"beat",
"rain",
"responsible",
"beauty",
"clean",
"command",
"detail",
"dream",
"dust",
"evil",
"faces",
"independent",
"somehow",
"song",
"wine",
"advantage",
"column",
"ordinary",
"phase",
"quick",
"village",
"box",
"chapter",
"daughter",
"intellectual",
"leader",
"rule",
"standards",
"writer",
"vote",
"boat",
"bottle",
"cell",
"frame",
"murder",
"weather",
"dog",
"quiet",
"favor",
"traditional",
"trust",
"desire",
"nice",
"rich",
"secret",
"brother",
"coffee",
"knife",
"literary",
"memory",
"cross",
"event",
"sweet",
"interesting",
"rock",
"teacher",
"train",
"youth",
"neck",
"capacity",
"drink",
"fair",
"ship",
"bar",
"crisis",
"spread",
"watch",
"distribution",
"patient",
"sex",
"carry",
"positive",
"scientific",
"broad",
"check",
"failure",
"rose",
"battle",
"equal",
"king",
"kitchen",
"build",
"dinner",
"gray",
"pain",
"bright",
"complex",
"enemy",
"key",
"objective",
"balance",
"break",
"dance",
"famous",
"poetry",
"wait",
"active",
"film",
"success",
"books",
"caught",
"concern",
"opinion",
"fight",
"popular",
"doctor",
"hell",
"supply",
"clay",
"happy",
"original",
"walk",
"news",
"unit",
"health",
"agreement",
"pretty",
"arm",
"machine",
"serve",
"stress",
"firm",
"glass",
"income",
"race",
"faith",
"hospital",
"wish",
"attack",
"whatever",
"foot",
"choice",
"justice",
"corner",
"forward",
"design",
"post",
"serious",
"quality",
"religion",
"progress",
"test",
"understanding",
"window",
"heavy",
"writing",
"couple",
"gun",
"approach",
"deep",
"performance",
"sun",
"manner",
"hit",
"radio",
"beautiful",
"farm",
"horse",
"hotel",
"plant",
"truth",
"respect",
"easy",
"fear",
"theory",
"chance",
"freedom",
"spring",
"average",
"cause",
"influence",
"army",
"direct",
"game",
"green",
"plane",
"friend",
"bed",
"normal",
"trouble",
"record",
"method",
"moral",
"bad",
"knowledge",
"month",
"letter",
"color",
"square",
"fall",
"nation",
"answer",
"purpose",
"food",
"natural",
"police",
"blue",
"earth",
"market",
"paper",
"river",
"religious",
"island",
"simple",
"building",
"industry",
"son",
"lost",
"heart",
"story",
"cold",
"material",
"dead",
"hope",
"person",
"spirit",
"space",
"father",
"nature",
"dark",
"pressure",
"idea",
"women",
"alone",
"book",
"mean",
"modern",
"peace",
"strong",
"table",
"fire",
"cut",
"value",
"art",
"total",
"able",
"education",
"red",
"child",
"mother",
"music",
"black",
"party",
"girl",
"woman",
"hard",
"future",
"wife",
"force",
"love",
"close",
"board",
"change",
"short",
"street",
"moment",
"study",
"boy",
"cost",
"office",
"behind",
"air",
"class",
"money",
"car",
"field",
"body",
"death",
"history",
"free",
"action",
"name",
"kind",
"door",
"help",
"god",
"mind",
"open",
"interest",
"family",
"church",
"power",
"light",
"big",
"young",
"face",
"white",
"social",
"present",
"city",
"head",
"water",
"hand",
"war",
"school",
"thought",
"part",
"small",
"home",
"high",
"house",
"life",
"old",
"work",
"make",
"world",
"good",
"little",
"people",
"state",
"long",
"man",
"new",
"time"]

sentence = fake.sentence(nb_words=3, variable_nb_words=True, ext_word_list=ext_word_list)

emoji_list = [":+1:",
":-1:",
":100:",
":1234:",
":8ball:",
":a:",
":ab:",
":abc:",
":abcd:",
":accept:",
":aerial_tramway:",
":airplane:",
":alarm_clock:",
":alien:",
":ambulance:",
":anchor:",
":angel:",
":anger:",
":angry:",
":anguished:",
":ant:",
":apple:",
":aquarius:",
":aries:",
":arrow_backward:",
":arrow_double_down:",
":arrow_double_up:",
":arrow_down:",
":arrow_down_small:",
":arrow_forward:",
":arrow_heading_down:",
":arrow_heading_up:",
":arrow_left:",
":arrow_lower_left:",
":arrow_lower_right:",
":arrow_right:",
":arrow_right_hook:",
":arrow_up:",
":arrow_up_down:",
":arrow_up_small:",
":arrow_upper_left:",
":arrow_upper_right:",
":arrows_clockwise:",
":arrows_counterclockwise:",
":art:",
":articulated_lorry:",
":astonished:",
":atm:",
":b:",
":baby:",
":baby_bottle:",
":baby_chick:",
":baby_symbol:",
":back:",
":baggage_claim:",
":balloon:",
":ballot_box_with_check:",
":bamboo:",
":banana:",
":bangbang:",
":bank:",
":bar_chart:",
":barber:",
":baseball:",
":basketball:",
":bath:",
":bathtub:",
":battery:",
":bear:",
":beer:",
":beers:",
":beetle:",
":beginner:",
":bell:",
":bento:",
":bicyclist:",
":bike:",
":bikini:",
":bird:",
":birthday:",
":black_circle:",
":black_joker:",
":black_large_square:",
":black_medium_small_square:",
":black_medium_square:",
":black_nib:",
":black_small_square:",
":black_square_button:",
":blossom:",
":blowfish:",
":blue_book:",
":blue_car:",
":blue_heart:",
":blush:",
":boar:",
":boat:",
":bomb:",
":book:",
":bookmark:",
":bookmark_tabs:",
":books:",
":boom:",
":boot:",
":bouquet:",
":bow:",
":bowling:",
":bowtie:",
":boy:",
":bread:",
":bride_with_veil:",
":bridge_at_night:",
":briefcase:",
":broken_heart:",
":bug:",
":bulb:",
":bullettrain_front:",
":bullettrain_side:",
":bus:",
":busstop:",
":bust_in_silhouette:",
":busts_in_silhouette:",
":cactus:",
":cake:",
":calendar:",
":calling:",
":camel:",
":camera:",
":cancer:",
":candy:",
":capital_abcd:",
":capricorn:",
":car:",
":card_index:",
":carousel_horse:",
":cat2:",
":cat:",
":cd:",
":chart:",
":chart_with_downwards_trend:",
":chart_with_upwards_trend:",
":checkered_flag:",
":cherries:",
":cherry_blossom:",
":chestnut:",
":chicken:",
":children_crossing:",
":chocolate_bar:",
":christmas_tree:",
":church:",
":cinema:",
":circus_tent:",
":city_sunrise:",
":city_sunset:",
":cl:",
":clap:",
":clapper:",
":clipboard:",
":clock1030:",
":clock10:",
":clock1130:",
":clock11:",
":clock1230:",
":clock12:",
":clock130:",
":clock1:",
":clock230:",
":clock2:",
":clock330:",
":clock3:",
":clock430:",
":clock4:",
":clock530:",
":clock5:",
":clock630:",
":clock6:",
":clock730:",
":clock7:",
":clock830:",
":clock8:",
":clock930:",
":clock9:",
":closed_book:",
":closed_lock_with_key:",
":closed_umbrella:",
":cloud:",
":clubs:",
":cn:",
":cocktail:",
":coffee:",
":cold_sweat:",
":collision:",
":computer:",
":confetti_ball:",
":confounded:",
":confused:",
":congratulations:",
":construction:",
":construction_worker:",
":convenience_store:",
":cookie:",
":cool:",
":cop:",
":copyright:",
":corn:",
":couple:",
":couple_with_heart:",
":couplekiss:",
":cow2:",
":cow:",
":credit_card:",
":crescent_moon:",
":crocodile:",
":crossed_flags:",
":crown:",
":cry:",
":crying_cat_face:",
":crystal_ball:",
":cupid:",
":curly_loop:",
":currency_exchange:",
":curry:",
":custard:",
":customs:",
":cyclone:",
":dancer:",
":dancers:",
":dango:",
":dart:",
":dash:",
":date:",
":de:",
":deciduous_tree:",
":department_store:",
":diamond_shape_with_a_dot_inside:",
":diamonds:",
":disappointed:",
":disappointed_relieved:",
":dizzy:",
":dizzy_face:",
":do_not_litter:",
":dog2:",
":dog:",
":dollar:",
":dolls:",
":dolphin:",
":door:",
":doughnut:",
":dragon:",
":dragon_face:",
":dress:",
":dromedary_camel:",
":droplet:",
":dvd:",
":e-mail:",
":ear:",
":ear_of_rice:",
":earth_africa:",
":earth_americas:",
":earth_asia:",
":egg:",
":eggplant:",
":eight:",
":eight_pointed_black_star:",
":eight_spoked_asterisk:",
":electric_plug:",
":elephant:",
":email:",
":end:",
":envelope:",
":es:",
":euro:",
":european_castle:",
":european_post_office:",
":evergreen_tree:",
":exclamation:",
":expressionless:",
":eyeglasses:",
":eyes:",
":facepunch:",
":factory:",
":fallen_leaf:",
":family:",
":fast_forward:",
":fax:",
":fearful:",
":feelsgood:",
":feet:",
":ferris_wheel:",
":file_folder:",
":finnadie:",
":fire:",
":fire_engine:",
":fireworks:",
":first_quarter_moon:",
":first_quarter_moon_with_face:",
":fish:",
":fish_cake:",
":fishing_pole_and_fish:",
":fist:",
":five:",
":flags:",
":flashlight:",
":floppy_disk:",
":flower_playing_cards:",
":flushed:",
":foggy:",
":football:",
":fork_and_knife:",
":fountain:",
":four:",
":four_leaf_clover:",
":fr:",
":free:",
":fried_shrimp:",
":fries:",
":frog:",
":frowning:",
":fu:",
":fuelpump:",
":full_moon:",
":full_moon_with_face:",
":game_die:",
":gb:",
":gem:",
":gemini:",
":ghost:",
":gift:",
":gift_heart:",
":girl:",
":globe_with_meridians:",
":goat:",
":goberserk:",
":godmode:",
":golf:",
":grapes:",
":green_apple:",
":green_book:",
":green_heart:",
":grey_exclamation:",
":grey_question:",
":grimacing:",
":grin:",
":grinning:",
":guardsman:",
":guitar:",
":gun:",
":haircut:",
":hamburger:",
":hammer:",
":hamster:",
":hand:",
":handbag:",
":hankey:",
":hash:",
":hatched_chick:",
":hatching_chick:",
":headphones:",
":hear_no_evil:",
":heart:",
":heart_decoration:",
":heart_eyes:",
":heart_eyes_cat:",
":heartbeat:",
":heartpulse:",
":hearts:",
":heavy_check_mark:",
":heavy_division_sign:",
":heavy_dollar_sign:",
":heavy_exclamation_mark:",
":heavy_minus_sign:",
":heavy_multiplication_x:",
":heavy_plus_sign:",
":helicopter:",
":herb:",
":hibiscus:",
":high_brightness:",
":high_heel:",
":hocho:",
":honey_pot:",
":honeybee:",
":horse:",
":horse_racing:",
":hospital:",
":hotel:",
":hotsprings:",
":hourglass:",
":hourglass_flowing_sand:",
":house:",
":house_with_garden:",
":hurtrealbad:",
":hushed:",
":ice_cream:",
":icecream:",
":id:",
":ideograph_advantage:",
":imp:",
":inbox_tray:",
":incoming_envelope:",
":information_desk_person:",
":information_source:",
":innocent:",
":interrobang:",
":iphone:",
":it:",
":izakaya_lantern:",
":jack_o_lantern:",
":japan:",
":japanese_castle:",
":japanese_goblin:",
":japanese_ogre:",
":jeans:",
":joy:",
":joy_cat:",
":jp:",
":key:",
":keycap_ten:",
":kimono:",
":kiss:",
":kissing:",
":kissing_cat:",
":kissing_closed_eyes:",
":kissing_heart:",
":kissing_smiling_eyes:",
":koala:",
":koko:",
":kr:",
":large_blue_circle:",
":large_blue_diamond:",
":large_orange_diamond:",
":last_quarter_moon:",
":last_quarter_moon_with_face:",
":laughing:",
":leaves:",
":ledger:",
":left_luggage:",
":left_right_arrow:",
":leftwards_arrow_with_hook:",
":lemon:",
":leo:",
":leopard:",
":libra:",
":light_rail:",
":link:",
":lips:",
":lipstick:",
":lock:",
":lock_with_ink_pen:",
":lollipop:",
":loop:",
":loudspeaker:",
":love_hotel:",
":love_letter:",
":low_brightness:",
":m:",
":mag:",
":mag_right:",
":mahjong:",
":mailbox:",
":mailbox_closed:",
":mailbox_with_mail:",
":mailbox_with_no_mail:",
":man:",
":man_with_gua_pi_mao:",
":man_with_turban:",
":mans_shoe:",
":maple_leaf:",
":mask:",
":massage:",
":meat_on_bone:",
":mega:",
":melon:",
":memo:",
":mens:",
":metal:",
":metro:",
":microphone:",
":microscope:",
":milky_way:",
":minibus:",
":minidisc:",
":mobile_phone_off:",
":money_with_wings:",
":moneybag:",
":monkey:",
":monkey_face:",
":monorail:",
":mortar_board:",
":mount_fuji:",
":mountain_bicyclist:",
":mountain_cableway:",
":mountain_railway:",
":mouse2:",
":mouse:",
":movie_camera:",
":moyai:",
":muscle:",
":mushroom:",
":musical_keyboard:",
":musical_note:",
":musical_score:",
":mute:",
":nail_care:",
":name_badge:",
":neckbeard:",
":necktie:",
":negative_squared_cross_mark:",
":neutral_face:",
":new:",
":new_moon:",
":new_moon_with_face:",
":newspaper:",
":ng:",
":nine:",
":no_bell:",
":no_bicycles:",
":no_entry:",
":no_entry_sign:",
":no_good:",
":no_mobile_phones:",
":no_mouth:",
":no_pedestrians:",
":no_smoking:",
":non-potable_water:",
":nose:",
":notebook:",
":notebook_with_decorative_cover:",
":notes:",
":nut_and_bolt:",
":o2:",
":o:",
":ocean:",
":octocat:",
":octopus:",
":oden:",
":office:",
":ok:",
":ok_hand:",
":ok_woman:",
":older_man:",
":older_woman:",
":on:",
":oncoming_automobile:",
":oncoming_bus:",
":oncoming_police_car:",
":oncoming_taxi:",
":one:",
":open_file_folder:",
":open_hands:",
":open_mouth:",
":ophiuchus:",
":orange_book:",
":outbox_tray:",
":ox:",
":package:",
":page_facing_up:",
":page_with_curl:",
":pager:",
":palm_tree:",
":panda_face:",
":paperclip:",
":parking:",
":part_alternation_mark:",
":partly_sunny:",
":passport_control:",
":paw_prints:",
":peach:",
":pear:",
":pencil2:",
":pencil:",
":penguin:",
":pensive:",
":performing_arts:",
":persevere:",
":person_frowning:",
":person_with_blond_hair:",
":person_with_pouting_face:",
":phone:",
":pig2:",
":pig:",
":pig_nose:",
":pill:",
":pineapple:",
":pisces:",
":pizza:",
":point_down:",
":point_left:",
":point_right:",
":point_up:",
":point_up_2:",
":police_car:",
":poodle:",
":poop:",
":post_office:",
":postal_horn:",
":postbox:",
":potable_water:",
":pouch:",
":poultry_leg:",
":pound:",
":pouting_cat:",
":pray:",
":princess:",
":punch:",
":purple_heart:",
":purse:",
":pushpin:",
":put_litter_in_its_place:",
":question:",
":rabbit2:",
":rabbit:",
":racehorse:",
":radio:",
":radio_button:",
":rage1:",
":rage2:",
":rage3:",
":rage4:",
":rage:",
":railway_car:",
":rainbow:",
":raised_hand:",
":raised_hands:",
":raising_hand:",
":ram:",
":ramen:",
":rat:",
":recycle:",
":red_car:",
":red_circle:",
":registered:",
":relaxed:",
":relieved:",
":repeat:",
":repeat_one:",
":restroom:",
":revolving_hearts:",
":rewind:",
":ribbon:",
":rice:",
":rice_ball:",
":rice_cracker:",
":rice_scene:",
":ring:",
":rocket:",
":roller_coaster:",
":rooster:",
":rose:",
":rotating_light:",
":round_pushpin:",
":rowboat:",
":ru:",
":rugby_football:",
":runner:",
":running:",
":running_shirt_with_sash:",
":sa:",
":sagittarius:",
":sailboat:",
":sake:",
":sandal:",
":santa:",
":satellite:",
":satisfied:",
":saxophone:",
":school:",
":school_satchel:",
":scissors:",
":scorpius:",
":scream:",
":scream_cat:",
":scroll:",
":seat:",
":secret:",
":see_no_evil:",
":seedling:",
":seven:",
":shaved_ice:",
":sheep:",
":shell:",
":ship:",
":shipit:",
":shirt:",
":shit:",
":shoe:",
":shower:",
":signal_strength:",
":simple_smile:",
":six:",
":six_pointed_star:",
":ski:",
":skull:",
":sleeping:",
":sleepy:",
":slot_machine:",
":small_blue_diamond:",
":small_orange_diamond:",
":small_red_triangle:",
":small_red_triangle_down:",
":smile:",
":smile_cat:",
":smiley:",
":smiley_cat:",
":smiling_imp:",
":smirk:",
":smirk_cat:",
":smoking:",
":snail:",
":snake:",
":snowboarder:",
":snowflake:",
":snowman:",
":sob:",
":soccer:",
":soon:",
":sos:",
":sound:",
":space_invader:",
":spades:",
":spaghetti:",
":sparkle:",
":sparkler:",
":sparkles:",
":sparkling_heart:",
":speak_no_evil:",
":speaker:",
":speech_balloon:",
":speedboat:",
":squirrel:",
":star2:",
":star:",
":stars:",
":station:",
":statue_of_liberty:",
":steam_locomotive:",
":stew:",
":straight_ruler:",
":strawberry:",
":stuck_out_tongue:",
":stuck_out_tongue_closed_eyes:",
":stuck_out_tongue_winking_eye:",
":sun_with_face:",
":sunflower:",
":sunglasses:",
":sunny:",
":sunrise:",
":sunrise_over_mountains:",
":surfer:",
":sushi:",
":suspect:",
":suspension_railway:",
":sweat:",
":sweat_drops:",
":sweat_smile:",
":sweet_potato:",
":swimmer:",
":symbols:",
":syringe:",
":tada:",
":tanabata_tree:",
":tangerine:",
":taurus:",
":taxi:",
":tea:",
":telephone:",
":telephone_receiver:",
":telescope:",
":tennis:",
":tent:",
":thought_balloon:",
":three:",
":thumbsdown:",
":thumbsup:",
":ticket:",
":tiger2:",
":tiger:",
":tired_face:",
":tm:",
":toilet:",
":tokyo_tower:",
":tomato:",
":tongue:",
":top:",
":tophat:",
":tractor:",
":traffic_light:",
":train2:",
":train:",
":tram:",
":triangular_flag_on_post:",
":triangular_ruler:",
":trident:",
":triumph:",
":trolleybus:",
":trollface:",
":trophy:",
":tropical_drink:",
":tropical_fish:",
":truck:",
":trumpet:",
":tshirt:",
":tulip:",
":turtle:",
":tv:",
":twisted_rightwards_arrows:",
":two:",
":two_hearts:",
":two_men_holding_hands:",
":two_women_holding_hands:",
":u5272:",
":u5408:",
":u55b6:",
":u6307:",
":u6708:",
":u6709:",
":u6e80:",
":u7121:",
":u7533:",
":u7981:",
":u7a7a:",
":uk:",
":umbrella:",
":unamused:",
":underage:",
":unlock:",
":up:",
":us:",
":v:",
":vertical_traffic_light:",
":vhs:",
":vibration_mode:",
":video_camera:",
":video_game:",
":violin:",
":virgo:",
":volcano:",
":vs:",
":waning_crescent_moon:",
":waning_gibbous_moon:",
":warning:",
":watch:",
":water_buffalo:",
":watermelon:",
":wave:",
":wavy_dash:",
":waxing_crescent_moon:",
":waxing_gibbous_moon:",
":wc:",
":weary:",
":wedding:",
":whale2:",
":whale:",
":wheelchair:",
":white_check_mark:",
":white_circle:",
":white_flower:",
":white_large_square:",
":white_medium_small_square:",
":white_medium_square:",
":white_small_square:",
":white_square_button:",
":wind_chime:",
":wine_glass:",
":wink:",
":wolf:",
":woman:",
":womans_clothes:",
":womans_hat:",
":womens:",
":worried:",
":wrench:",
":x:",
":yellow_heart:",
":yen:",
":yum:",
":zap:",
":zero:",
":zzz:"]

emoji = random.choice(emoji_list)
message = "({}) {} messages from {}".format(number_messages, headline_type, name)
# Log message information prior to sending
# Construct Tracking URL
headline = emojiRender.emojize(sentence + ' ' + emoji, use_aliases=True).encode('utf8')

logger.info('Campaign: ' + campaign)
logger.info('Headline: ' + headline)
logger.info('Message: ' + message)
logger.info('Thumbnail: ' + thumbnail)
logger.info('Name: ' + name)
logger.info('Number of Messages: ' + str(number_messages))
logger.info('Badge Image: ' + badge)

offer = 'default'
tracking_url = "http://trk.clickchaser.com/0faecec5-56de-4a85-acb9-49fa4902d071?campaign={}&message={}&headline={}&thumbnail={}&name={}&num_messages={}&badge={}&offer={}".format(campaign, headline, message, thumbnail, name, number_messages, badge, offer)
logger.info('Tracking URL:')
logger.info(tracking_url)


# Wait 1-5minutes before sending message to appear more natural
time_to_sleep = random.randint(60,300)
logger.info('Sleeping for: ' + str(time_to_sleep))
time.sleep(time_to_sleep)

# Message Sending Loop
rest_authorization = "Basic {}".format(onesignal_rest_api_key)
header = {"Content-Type": "application/json; charset=utf-8",
          "Authorization": rest_authorization}
payload = {"app_id": onesignal_app_id,
           "included_segments": ["All"],
           "ttl": ttl,
           "url": tracking_url,
           "contents": {"en": "{}".format(message)},
           #"contents": contents,
           "headings": {"en": "{}".format(headline)},
           #"headings": headings,
           "chrome_web_icon": thumbnail,
           "chrome_web_badge": badge,
           "priority": priority,
           "large_icon": badge,
           "small_icon": badge,
           "android_led_color": "#FFF93E3E",
           "collapse_id": "collapse"}
logger.info('Payload:')
logger.info(payload)
req = requests.post("https://onesignal.com/api/v1/notifications", headers=header, data=json.dumps(payload))
push_results = req.json()
notificationId = push_results['id']
num_user_sent = push_results['recipients']

image = ""

# Get latest message to calculate churn rate, use notification_id to retrieve 
#cur.execute("SELECT * FROM public.latest_message order by creation_date desc limit 1;")
#last_message = cur.fetchone()

# Insert latest message after sending
sql = """INSERT INTO public.latest_message (creation_date, headline, thumbnail, name, message, image, badge,
num_user_sent) VALUES (current_timestamp, %s, %s, %s, %s, %s, %s, )""", (headline, thumbnail, name, message, image, badge,
num_user_sent)
cur.execute(sql)
conn.commit()

logger.info('Status Code: ' + str(req.status_code))
logger.info('Notification ID: ' + str(notificationId))
logger.info('Users Reached: ' + str(num_user_sent))


# Wait for 20 minutes
minutes = 20 * 60 
time.sleep(minutes)

# Build onesignal Auth Headers                                                                                                                  
rest_authorization = "Basic {}".format(onesignal_rest_api_key)                                                                                  
header = {"Content-Type": "application/json; charset=utf-8",                                                                                    
       "Authorization": rest_authorization}                                                                                                  
# Get churn stats after 20 minutes from oneSignal + voluum
notification_request_url = "https://onesignal.com/api/v1/apps/{}".format(onesignal_app_id)               
req = requests.post(notification_request_url, headers=header)
results = req.json()
num_users_remaining = results['messageable_players']
num_user_lost = num_user_sent - num_users_remaining
# Update churn using last message before updating latest_message


# Build onesignal Auth Headers
rest_authorization = "Basic {}".format(onesignal_rest_api_key)
header = {"Content-Type": "application/json; charset=utf-8",
          "Authorization": rest_authorization}
# Get message stats after 20 minutes from oneSignal + voluum
notification_request_url = "http://onesignal.com/api/v1/notifications/{}?app_id={}".format(str(notificationId), onesignal_app_id)
req = requests.post(notification_request_url, headers=header)
results = req.json()

num_user_open = round(results['converted'] or 0)
clicks_worth = round(num_user_open * 0.0367, 2)
lost_users_worth = round(num_user_lost * 0.078)
subscribers_worth = round(num_users_remaining * 0.078)
num_time_sent = 1
num_user_converted = 0
revenue_generated = clicks_worth
average_churn_rate = num_user_lost / num_user_sent
average_open_rate = num_user_open / num_user_sent
average_conversion_rate = 0

logger.info(headline)
logger.info(message)
logger.info(num_time_sent)
logger.info(num_user_sent)
logger.info(num_user_open)
logger.info(num_user_lost)
logger.info(num_user_converted)
logger.info(revenue_generated)
logger.info(average_churn_rate)
logger.info(average_open_rate)
logger.info(average_conversion_rate)


# UPDATE Headline
sql = """ UPDATE public.headlines SET num_time_sent=num_time_sent + 1, num_user_sent=num_user_sent + {num_user_sent},
num_user_open=num_user_open + {num_user_open}, num_user_converted=num_user_converted + {num_user_converted} WHERE
headline='{headline}';""".format(num_user_sent=num_user_sent, num_user_open=num_user_open,
num_user_converted=num_user_converted, headline=headline)
print(sql)
cur.execute(sql) 
conn.commit()

# Insert headline
sql = """INSERT INTO public.headlines (creation_date, headline, num_time_sent, num_user_sent, num_user_open,
num_user_lost, num_user_converted, revenue_generated, average_churn_rate, average_open_rate, average_conversion_rate)
VALUES (current_timestamp, '{headline}', {num_time_sent}, {num_user_sent}, {num_user_open}, {num_user_lost},
{num_user_converted}, {revenue_generated}, {average_churn_rate}, {average_open_rate},
{average_conversion_rate});""".format(headline=headline, 
num_time_sent=num_time_sent, 
num_user_sent=num_user_sent,
num_user_open=num_user_open, 
num_user_lost=num_user_lost, 
num_user_converted=num_user_converted, 
revenue_generated=revenue_generated, 
average_churn_rate=average_churn_rate, 
average_open_rate=average_open_rate,
average_conversion_rate=average_conversion_rate)
cur.execute(sql)
conn.commit()

# UPDATE Message
sql = """ UPDATE public.messages SET num_time_sent=num_time_sent + 1, num_user_sent=num_user_sent + {num_user_sent},
num_user_open=num_user_open + {num_user_open}, num_user_converted=num_user_converted + {num_user_converted} WHERE
message='{message}';""".format(num_user_sent=num_user_sent, num_user_open=num_user_open,
num_user_converted=num_user_converted, message=message)
cur.execute(sql) 
conn.commit()

# Insert or update messages
sql = """INSERT INTO public.messages (creation_date, message, num_time_sent, num_user_sent, num_user_open,
num_user_lost, num_user_converted, revenue_generated, average_churn_rate, average_open_rate, average_conversion_rate)
VALUES (current_timestamp, '{message}', {num_time_sent}, {num_user_sent}, {num_user_open}, {num_user_lost},
{num_user_converted}, {revenue_generated}, {average_churn_rate}, {average_open_rate},
{average_conversion_rate});""".format(message=message, 
num_time_sent=num_time_sent, 
num_user_sent=num_user_sent,
num_user_open=num_user_open, 
num_user_lost=num_user_lost, 
num_user_converted=num_user_converted, 
revenue_generated=revenue_generated, 
average_churn_rate=average_churn_rate, 
average_open_rate=average_open_rate,
average_conversion_rate=average_conversion_rate)
conn.commit()

# UPDATE Badge
sql = """ UPDATE public.badges SET num_time_sent=num_time_sent + 1, num_user_sent=num_user_sent + {num_user_sent},
num_user_open=num_user_open + {num_user_open}, num_user_converted=num_user_converted + {num_user_converted} WHERE
badge='{badge}';""".format(num_user_sent=num_user_sent, num_user_open=num_user_open,
num_user_converted=num_user_converted, badge=badge)
cur.execute(sql)
conn.commit()

# INSERT Badge
sql = """INSERT INTO public.badges (creation_date, badge, num_time_sent, num_user_sent, num_user_open,
num_user_lost, num_user_converted, revenue_generated, average_churn_rate, average_open_rate, average_conversion_rate)
VALUES (current_timestamp, '{badge}', {num_time_sent}, {num_user_sent}, {num_user_open}, {num_user_lost},
{num_user_converted}, {revenue_generated}, {average_churn_rate}, {average_open_rate},
{average_conversion_rate});""".format(badge=badge,
num_time_sent=num_time_sent,
num_user_sent=num_user_sent,
num_user_open=num_user_open,
num_user_lost=num_user_lost,
num_user_converted=num_user_converted,
revenue_generated=revenue_generated,
average_churn_rate=average_churn_rate,
average_open_rate=average_open_rate,
average_conversion_rate=average_conversion_rate)
conn.commit()


# UPDATE Thumbnail
sql = """ UPDATE public.thumbnails SET num_time_sent=num_time_sent + 1, num_user_sent=num_user_sent + {num_user_sent},
num_user_open=num_user_open + {num_user_open}, num_user_converted=num_user_converted + {num_user_converted} WHERE
thumbnail='{thumbnail}';""".format(num_user_sent=num_user_sent, num_user_open=num_user_open,
num_user_converted=num_user_converted, thumbnail=thumbnail)
cur.execute(sql)
conn.commit()

# INSERT Thumbnail
sql = """INSERT INTO public.thumbnails (creation_date, thumbnail, num_time_sent, num_user_sent, num_user_open,
num_user_lost, num_user_converted, revenue_generated, average_churn_rate, average_open_rate, average_conversion_rate)
VALUES (current_timestamp, '{thumbnail}', {num_time_sent}, {num_user_sent}, {num_user_open}, {num_user_lost},
{num_user_converted}, {revenue_generated}, {average_churn_rate}, {average_open_rate},
{average_conversion_rate});""".format(thumbnail=thumbnail,
num_time_sent=num_time_sent,
num_user_sent=num_user_sent,
num_user_open=num_user_open,
num_user_lost=num_user_lost,
num_user_converted=num_user_converted,
revenue_generated=revenue_generated,
average_churn_rate=average_churn_rate,
average_open_rate=average_open_rate,
average_conversion_rate=average_conversion_rate)
conn.commit()


# UPDATE Names
sql = """ UPDATE public.names SET num_time_sent=num_time_sent + 1, num_user_sent=num_user_sent + {num_user_sent},
num_user_open=num_user_open + {num_user_open}, num_user_converted=num_user_converted + {num_user_converted} WHERE
name='{name}';""".format(num_user_sent=num_user_sent, num_user_open=num_user_open,
num_user_converted=num_user_converted, name=name)
cur.execute(sql)
conn.commit()

# INSERT Names
sql = """INSERT INTO public.names (creation_date, name, num_time_sent, num_user_sent, num_user_open,
num_user_lost, num_user_converted, revenue_generated, average_churn_rate, average_open_rate, average_conversion_rate)
VALUES (current_timestamp, '{name}', {num_time_sent}, {num_user_sent}, {num_user_open}, {num_user_lost},
{num_user_converted}, {revenue_generated}, {average_churn_rate}, {average_open_rate},
{average_conversion_rate});""".format(name=name,
num_time_sent=num_time_sent,
num_user_sent=num_user_sent,
num_user_open=num_user_open,
num_user_lost=num_user_lost,
num_user_converted=num_user_converted,
revenue_generated=revenue_generated,
average_churn_rate=average_churn_rate,
average_open_rate=average_open_rate,
average_conversion_rate=average_conversion_rate)
conn.commit()


# Log Results
logger.info('Notification ID:' + str(notificationId))
logger.info('Clicks: ' + str(num_user_open))
logger.info('Clicks worth: ' + str(clicks_worth))
logger.info('Lost Users: ' + str(lost_users))
logger.info('Lost Users Worth: ' + str(lost_users_worth))
logger.info('Subscribers: ' + str(subscribers))
logger.info('Subscribers Worth: ' + str(subscribers_worth))
logger.info('Net Gain/Loss: ' + str(clicks_worth - lost_users_worth))
logger.info('Open Rate: ' + str((num_user_open / subscribers * 100)) + '%')


def test():
    """ Testing Docstring"""
    pass

if __name__=='__main__':
    test()
